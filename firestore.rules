rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if isSignedIn() && getUserData().roles.hasAny(["editor","admin"]);
    }

    match /user/{userId} {
      allow read: if isSignedIn();
      allow write: if getUserData().roles.hasAny(["admin"]);
    }

    match /public {
      allow write: if true;
      allow read: if isSignedIn() && getUserData().roles.hasAny(["editor","admin"]);
    }

    // match /{document=**} {
    //   allow read, write: if true;
    // }

    // Functions //

    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function emailVerified() {
      return request.auth.token.email_verified;
    }

    function existingData() {
      return resource.data;
    }

    function incomingData() {
      return request.resource.data;
    }

    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data
    }
  }
}